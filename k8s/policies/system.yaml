---
# allow cluster > kubernetes api
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-cert-manager
  namespace: system
spec:
  podSelector:
    matchLabels:
      app: cert-manager
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: nginx-ingress
          component: controller
  - from:
    - namespaceSelector:
        matchLabels:
          purpose: monitoring
      podSelector:
        matchLabels:
          app: prometheus    
  egress:
  - to: []
    ports:
    - port: 80
      protocol: TCP
    - port: 443
      protocol: TCP
---
# nginx:
#
# - allow ingress from internal services and world on port 80, 443
# - allow egress to internal services on port 80, 443
#
# @todo: narrow internal services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-access-nginx
  namespace: system
spec:
  podSelector:
    matchLabels:
      app: nginx-ingress
      component: controller
  ingress:
  - from:
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  - from:
    - namespaceSelector:
        matchLabels:
          purpose: monitoring
      podSelector:
        matchLabels:
          app: prometheus    
  egress:
  - to: 
    - ipBlock:
        cidr: 192.168.0.0/16
    # ports:
    # - protocol: TCP
    #   port: 80
    # - protocol: TCP
    #   port: 443
---
# weave:
#
# - allow ingress from internal services and world on port 80, 443
# - allow egress to internal services on port 80, 443
#
# @todo: narrow internal services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-access-weave
  namespace: system
spec:
  podSelector:
    matchLabels:
      app: weave-scope
      component: frontend
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: weave-scope
          component: agent
  - from:
    - namespaceSelector:
        matchLabels:
          purpose: monitoring
      podSelector:
        matchLabels:
          app: prometheus    
  egress:
  # allow license lookup:
  - to:
    ports:
    - protocol: TCP
      port: 443
---
# Drone server:
#
# - allow egress to github.com on port 443
# - allow nginx ingress > drone server > drone agent
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-drone-server
  namespace: system
spec:
  podSelector:
    matchLabels:
      app: drone
      component: server
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: nginx-ingress
          component: controller
  - from:
    - podSelector:
        matchLabels:
          app: drone
          component: agent
  - from:
    - namespaceSelector:
        matchLabels:
          purpose: monitoring
      podSelector:
        matchLabels:
          app: prometheus    
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: drone
          component: agent
  # external traffic can't be limited to domains (yet), so rudimentary for now:
  - to:
    ports:
    - protocol: TCP
      port: 443
---
# Drone agent:
#
# - allow egress to github.com on port 443
# - allow drone server > drone agent > drone server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-drone-agent
  namespace: system
spec:
  podSelector:
    matchLabels:
      app: drone
      component: agent
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: drone
          component: server
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: drone
          component: server
  # external traffic can't be limited to domains (yet), so rudimentary for now:
  - to:
    ports:
    - protocol: TCP
      port: 443
